#!/usr/bin/env python2
import os
import subprocess

CONFIG_FILE = "config.yaml"
CONTAINER_NAME = "surflyc"
CONTAINER_NAME_FILE = ".container_name"
COMMAND_TEMPLATE = "lxc exec %s -- sudo --login --user client bash -c '" % CONTAINER_NAME + "%s'"
DEFAULT_CONFIG_TEMPLATE = """client_id: {client_id}
version: latest
"""

with open(CONTAINER_NAME_FILE, "rb") as f:
    CONTAINER_NAME = f.read().strip()


def main():
    if not os.path.exists(CONFIG_FILE):
        client_id = raw_input("Enter client id: ")
        with open(CONFIG_FILE, "wb") as config_file:
            config_file.write(DEFAULT_CONFIG_TEMPLATE.format(client_id=client_id))

    print("Pushing config.yaml command...")
    run_shell_command("lxc file push %s %s/home/client/install/%s" % (CONFIG_FILE, CONTAINER_NAME, CONFIG_FILE))

    print("Run ./setup command...")
    run_shell_command(COMMAND_TEMPLATE % "cd install && ./setup")


def run_shell_command(command, error_message=None, silent=False):
    """
    Execute shell command and verify exit code
    """
    code = subprocess.call(['/bin/bash', '-c', command])
    if code != 0:
        if not error_message:
            error_message = 'Failed to execute "%s"' % command
        error_message = "%s (code %s)" % (command, code)
        if silent:
            print(error_message)
        else:
            raise Exception(error_message)


if __name__ == '__main__':
    main()
